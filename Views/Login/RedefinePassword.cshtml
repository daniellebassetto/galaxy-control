@using System.ComponentModel.DataAnnotations
@using System.Reflection
<head>
    @model RedefinirSenhaViewModel
    @{
        ViewData["Title"] = "Redefinir Senha";
    }
</head>
<body>
    <div class="container">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success" role="alert">
                <button type="button" class="btn btn-success btn-sm close-alert-success" data-bs-dismiss="alert" arial-label="Close">X</button>
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger" role="alert">
                <button type="button" class="btn btn-danger btn-sm close-alert-error" data-bs-dismiss="alert" aria-label="Close">X</button>
                @TempData["ErrorMessage"]
            </div>
        }

        <div class="text-center mb-4">
            <h1 class="display-4">Redefinir senha</h1>
        </div>

        <div class="p-4 rounded-3 shadow-sm mx-auto" style="max-width: 800px; background-color: #ECA02D;">
            <form asp-controller="Login" class="form-container" asp-action="RedefinePassword" method="post">
                <div class="row mb-3">
                    <div class="mb-3">
                        <label for="senhaAtual" name="senhaAtual" class="form-label">Senha antiga</label>
                        <div class="input-group">
                            <input type="password" asp-for="SenhaAtual" class="form-control" id="senhaAtual" placeholder="Informe a senha">
                        </div>
                        @Html.ValidationMessageFor(x => x.SenhaAtual, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <label for="novaSenha" name="novaSenha" class="form-label">Senha nova</label>
                        <div class="input-group">
                            <input type="password" asp-for="NovaSenha" class="form-control" id="novaSenha" placeholder="Informe a senha">
                        </div>
                        @Html.ValidationMessageFor(x => x.NovaSenha, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <label for="confirmacaoNovaSenha" name="confirmacaoNovaSenha" class="form-label">Confirme a nova senha</label>
                        <div class="input-group">
                            <input type="password" asp-for="ConfirmacaoNovaSenha" class="form-control" id="confirmacaoNovaSenha" placeholder="Informe a senha">
                        </div>
                        @Html.ValidationMessageFor(x => x.ConfirmacaoNovaSenha, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Salvar
                    </button>
                    <a class="btn btn-danger" role="button" asp-controller="Home" asp-action="Index">
                        <i class="bi bi-arrow-left-circle"></i> Voltar
                    </a>
                </div>
            </form>
        </div>
    </div>
</body>