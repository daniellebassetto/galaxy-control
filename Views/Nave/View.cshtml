@using System.ComponentModel.DataAnnotations
@using System.Reflection

@model NaveViewModel
@{
    ViewData["Title"] = "Visualizar nave";
}
<div class="container">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            <button type="button" class="btn btn-success btn-sm close-alert-success" data-bs-dismiss="alert" arial-label="Close">X</button>
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert-error" data-bs-dismiss="alert" aria-label="Close">X</button>
            @TempData["ErrorMessage"]
        </div>
    }

    <div class="text-center mb-4">
        <h1 class="display-4">Visualizar Nave</h1>
    </div>

    <div class="p-4 rounded-3 shadow-sm mx-auto">
        <form>
            <div class="row mb-3">
                <div class="col-md-3">
                    <label for="codigoRastreio" class="form-label">Codigo de Rastreio</label>
                    <input type="text" asp-for="CodigoRastreio" class="form-control" id="codigoRastreio" readonly />
                    @Html.ValidationMessageFor(x => x.CodigoRastreio, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="dataEncontro" class="form-label">Data de Encontro</label>
                    <input type="date" asp-for="DataEncontro" class="form-control" id="dataEncontro" readonly>
                    @Html.ValidationMessageFor(x => x.DataEncontro, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="tamanho" class="form-label">Tamanho</label>
                    <select asp-for="Tamanho" class="form-select" id="tamanho" disabled>
                        <option value="">Selecione</option>
                        @foreach (var opcao in Enum.GetValues(typeof(EnumTamanhoNave)))
                        {
                            var displayAttribute = opcao.GetType().GetMember(opcao.ToString()!).First().GetCustomAttribute<DisplayAttribute>();
                            string? displayName = displayAttribute != null ? displayAttribute.Name : opcao.ToString();
                            <option value="@opcao">@displayName</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.Tamanho, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="cor" class="form-label">Cor</label>
                    <select asp-for="Cor" class="form-select" id="cor" disabled>
                        <option value="">Selecione</option>
                        @foreach (var opcao in Enum.GetValues(typeof(EnumCorNave)))
                        {
                            var displayAttribute = opcao.GetType().GetMember(opcao.ToString()!).First().GetCustomAttribute<DisplayAttribute>();
                            string? displayName = displayAttribute != null ? displayAttribute.Name : opcao.ToString();
                            <option value="@opcao">@displayName</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.Cor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-4">
                    <label for="tripulanteSaudavel" class="form-label">Total Tripulantes Saudáveis</label>
                    <input type="number" asp-for="TripulantesSaudaveis" class="form-control" id="tripulanteSaudavel" readonly />
                    @Html.ValidationMessageFor(x => x.TripulantesSaudaveis, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    <label for="tripulanteFerido" class="form-label">Total Tripulantes Feridos</label>
                    <input type="number" asp-for="TripulantesFeridos" class="form-control" id="tripulanteFerido" readonly />
                    @Html.ValidationMessageFor(x => x.TripulantesFeridos, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    <label for="tripulanteSemVida" class="form-label">Total Tripulantes Sem Vida</label>
                    <input type="number" asp-for="TripulantesSemVida" class="form-control" id="tripulanteSemVida" readonly />
                    @Html.ValidationMessageFor(x => x.TripulantesSemVida, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-3">
                    <label for="tipoLocal" class="form-label">Tipo Local de Queda</label>
                    <select asp-for="TipoLocalQueda" class="form-select" id="tipoLocal" disabled>
                        <option value="">Selecione</option>
                        @foreach (var opcao in Enum.GetValues(typeof(EnumTipoLocalQuedaNave)))
                        {
                            var displayAttribute = opcao.GetType().GetMember(opcao.ToString()!).First().GetCustomAttribute<DisplayAttribute>();
                            string? displayName = displayAttribute != null ? displayAttribute.Name : opcao.ToString();
                            <option value="@opcao">@displayName</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.TipoLocalQueda, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="local" class="form-label">Local de Queda</label>
                    <input type="text" asp-for="LocalQueda" class="form-control" id="local" readonly />
                    @Html.ValidationMessageFor(x => x.LocalQueda, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="armamento" class="form-label">Armamento</label>
                    <select asp-for="Armamento" class="form-select" id="armamento" disabled>
                        <option value="">Selecione</option>
                        @foreach (var opcao in Enum.GetValues(typeof(EnumArmamentoNave)))
                        {
                            var displayAttribute = opcao.GetType().GetMember(opcao.ToString()!).First().GetCustomAttribute<DisplayAttribute>();
                            string? displayName = displayAttribute != null ? displayAttribute.Name : opcao.ToString();
                            <option value="@opcao">@displayName</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.Armamento, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="combustivel" class="form-label">Tipo de Combustível</label>
                    <select asp-for="TipoCombustivel" class="form-select" id="combustivel" disabled>
                        <option value="">Selecione</option>
                        @foreach (var opcao in Enum.GetValues(typeof(EnumTipoCombustivelNave)))
                        {
                            var displayAttribute = opcao.GetType().GetMember(opcao.ToString()!).First().GetCustomAttribute<DisplayAttribute>();
                            string? displayName = displayAttribute != null ? displayAttribute.Name : opcao.ToString();
                            <option value="@opcao">@displayName</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.TipoCombustivel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-3">
                    <label for="grauAvaria" class="form-label">Grau de Avaria</label>
                    <select asp-for="GrauAvaria" class="form-select" id="grauAvaria" disabled>
                        <option value="">Selecione</option>
                        @foreach (var opcao in Enum.GetValues(typeof(EnumGrauAvariaNave)))
                        {
                            var displayAttribute = opcao.GetType().GetMember(opcao.ToString()!).First().GetCustomAttribute<DisplayAttribute>();
                            string? displayName = displayAttribute != null ? displayAttribute.Name : opcao.ToString();
                            <option value="@opcao">@displayName</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.GrauAvaria, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="potencialTecnologico" class="form-label">Potencial de Prospecção Tecnologica</label>
                    <select asp-for="PotencialProspeccaoTecnologica" class="form-select" id="potencialTecnologico" disabled>
                        <option value="">Selecione</option>
                        @foreach (var opcao in Enum.GetValues(typeof(EnumPotencialProspeccaoTecnologicaNave)))
                        {
                            var displayAttribute = opcao.GetType().GetMember(opcao.ToString()!).First().GetCustomAttribute<DisplayAttribute>();
                            string? displayName = displayAttribute != null ? displayAttribute.Name : opcao.ToString();
                            <option value="@opcao">@displayName</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.PotencialProspeccaoTecnologica, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="grauPericulosidade" class="form-label">Grau de Periculosidade</label>
                    <select asp-for="GrauPericulosidade" class="form-select" id="grauPericulosidade" disabled>
                        <option value="">Selecione</option>
                        @foreach (var opcao in Enum.GetValues(typeof(EnumGrauPericulosidadeNave)))
                        {
                            var displayAttribute = opcao.GetType().GetMember(opcao.ToString()!).First().GetCustomAttribute<DisplayAttribute>();
                            string? displayName = displayAttribute != null ? displayAttribute.Name : opcao.ToString();
                            <option value="@opcao">@displayName</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.GrauPericulosidade, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="classificacao" class="form-label">Utilidade escolhida</label>
                    <input type="text" asp-for="Classificacao" class="form-control" id="classificacao" readonly />
                    @Html.ValidationMessageFor(x => x.Classificacao, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-3">
                    <label for="dataCadastro" class="form-label">Data de Cadastro</label>
                    <input type="date" asp-for="DataCadastro" class="form-control" id="dataCadastro" readonly>
                    @Html.ValidationMessageFor(x => x.DataCadastro, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="dataAlteracao" class="form-label">Data de alteração</label>
                    @if(Model.DataAlteracao != null)
                    {
                        <input type="date" asp-for="DataAlteracao" class="form-control" id="dataAlteracao" readonly>
                    }
                    else
                    {
                        <input type="text" class="form-control" id="dataAlteracao" readonly>
                    }
                    @Html.ValidationMessageFor(x => x.DataAlteracao, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label for="statusReparo" class="form-label">Status do Reparo</label>
                    <select asp-for="StatusReparo" class="form-select" id="statusReparo" disabled>
                        <option value="">Selecione</option>
                        @foreach (var opcao in Enum.GetValues(typeof(EnumStatusReparoNave)))
                        {
                            var displayAttribute = opcao.GetType().GetMember(opcao.ToString()!).First().GetCustomAttribute<DisplayAttribute>();
                            string? displayName = displayAttribute != null ? displayAttribute.Name : opcao.ToString();
                            <option value="@opcao">@displayName</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.TipoLocalQueda, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="d-flex justify-content-between">
                <a class="btn btn-danger" role="button" asp-controller="Nave" asp-action="Index">
                    <i class="bi bi-arrow-left-circle" style="color: white;"></i> Voltar
                </a>
            </div>
        </form>
    </div>
</div>